package application;
import java.awt.event.ActionListener;
import java.util.ArrayList;
import java.util.List;
import java.util.concurrent.CountDownLatch;
import javafx.scene.control.TextArea;
import com.mongodb.async.SingleResultCallback;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;
import com.mongodb.client.model.Filters;
import com.mongodb.client.model.Updates;
import javafx.animation.PathTransition;
import javafx.animation.RotateTransition;
import javafx.animation.Timeline;
import javafx.application.Application;
import javafx.event.ActionEvent;
import javafx.event.EventHandler;
import javafx.geometry.Insets;
import javafx.scene.Parent;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.Label;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.CornerRadii;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.paint.Color;
import javafx.scene.shape.Arc;
import javafx.scene.shape.ArcType;
import javafx.scene.shape.Circle;
import javafx.scene.shape.Line;
import javafx.scene.shape.Polygon;
import javafx.scene.shape.Rectangle;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.scene.transform.Rotate;
import javafx.scene.transform.Transform;
import javafx.stage.Stage;
import javafx.util.Duration;
import javafx.scene.control.TextField;
import org.bson.Document;

public class OOD extends Application {
    public static void main(String[] args) {

        launch();

    }
//t
    @Override
    public void start(Stage primaryStage) throws Exception {
TextArea textArea = new TextArea();
        primaryStage.setTitle("Tech 2GO");

        Pane pane = new Pane();

        Image image = new Image("https://cdn-imgix.headout.com/tour/22589/TOUR-IMAGE/f243beca-f842-4915-9c80-df5f65e81a20-11825-tokyo-early-blooming-cherry-blossom-?auto=compress&fm=pjpg&w=1080&h=675&crop=faces&fit=min");
        ImageView iv = new ImageView(image);


        //Create Username Label

        Label label1 = new Label("Enter Account Username: ");

        label1.setLayoutY(50);

        label1.setLayoutX(100);

        label1.setStyle("-fx-text-fill: black");


        //Create Password Label

        Label label2 = new Label("Enter Account Password: ");

        label2.setLayoutY(100);

        label2.setLayoutX(100);

        label2.setStyle("-fx-text-fill: black");


        //Create Username TextField

        TextField TextField1 = new TextField();

        TextField1.setLayoutX(240);

        TextField1.setLayoutY(50);

        //Create Password TextField

        TextField TextField2 = new TextField();

        TextField2.setLayoutX(240);

        TextField2.setLayoutY(100);

        //Create Guest Button
        Button b7 = new Button("Guest");

        b7.setLayoutY(150);

        b7.setLayoutX(400);


        //Action of the Guest Button

        b7.setOnAction(new EventHandler<ActionEvent>() {

            @Override

            public void handle(ActionEvent event) {

            }

        });

        //Create Enter Button

        Button b5 = new Button("Enter");

        b5.setLayoutY(100);

        b5.setLayoutX(400);

        //Action of the Enter Button

        b5.setOnAction(new EventHandler<ActionEvent>() {
            @Override

            public void handle(ActionEvent event) {

                String username = TextField1.getText();

                String password = TextField2.getText();
            //    String[] confirm = AccountConfirmation(username, password);
                //figure out a way to use confirm length
                Stage subStage = new Stage();
                subStage.setTitle("Tech 2 GO");

                Pane subPane = new Pane();

                Image image = new Image("https://cdn-imgix.headout.com/tour/22589/TOUR-IMAGE/f243beca-f842-4915-9c80-df5f65e81a20-11825-tokyo-early-blooming-cherry-blossom-?auto=compress&fm=pjpg&w=1080&h=675&crop=faces&fit=min");
                ImageView iv = new ImageView(image);


                Label label3 = new Label("What would you like to purchase? ");
                label3.setLayoutY(30);

                label3.setLayoutX(200);

                label3.setStyle("-fx-text-fill: black");

                //Create Results Label

                Label label4 = new Label("Results: ");
                label4.setLayoutY(300);

                label4.setLayoutX(100);

                label4.setStyle("-fx-text-fill: black");

                //Create Quantity Label

                Label label5 = new Label("Quantity: ");

                label5.setLayoutY(100);

                label5.setLayoutX(380);

                label5.setStyle("-fx-text-fill: black");

                //Create Purchase TextField

                TextField TextField3 = new TextField();

                TextField3.setLayoutX(220);

                TextField3.setLayoutY(50);

                //Create Results TextField

               

                //Create Quantity TextField

                TextField TextField5 = new TextField();

                TextField5.setLayoutX(430);

                TextField5.setLayoutY(100);

                TextField5.setPrefWidth(50);


                Button b1 = new Button("Buy");

                b1.setLayoutY(100);

                b1.setLayoutX(150);

                //Action of Buy Button

                b1.setOnAction(new EventHandler<ActionEvent>() {
                    @Override
                    public void handle(ActionEvent event) {

                        System.out.println("Buy button has been pressed");
                        String strquantity = TextField5.getText();
                        String userinput = TextField3.getText();
                        //trymethod before I parse quantity
                        try {
                            int quan = Integer.parseInt(strquantity);
                        //    boolean t = searchInv(userinput, quan);
/*
                            if (t) {
                                //gets the value of price
                                double price = searchPrice(userinput, quan);
                                StoreFacade x = new StoreFacade();
                                x.setPrice(price);
                                x.observerTransaction();
                                x.processTransaction(TextField3.getText(), Integer.parseInt(TextField5.getText()));
                                x.description(TextField3.getText());
                                //    r.processTransaction(TextField3.getText(),Integer.parseInt(TextField5.getText()));

                            }
                            */
 
                        } catch (NumberFormatException e) {
                            //try and catch statement in case user accidently  selects item without a quantity.

                            TextField4.setText("ERROR: TEXTFIELD HAS BEEN LEFT BLANK Select the Stop button and try again.");

                        } catch (Exception ex) {
                            ex.printStackTrace();
                            //catches any other errors un accounted for
                        } finally {
                            System.out.println("Select the quit button and try again. Please Enter Both item name and quantity in the textfields");

                        }


                    }
                });

                //List Items Button

                Button b2 = new Button("List Items");

                b2.setLayoutX(150);

                b2.setLayoutY(150);

                //Action of List Items Button

                b2.setOnAction(new EventHandler<ActionEvent>() {
                    @Override
                    public void handle(ActionEvent event) {
                        //IterateProducts();

                    }
                });

                //Clear Button

                Button b3 = new Button("Clear");

                b3.setLayoutY(150);

                b3.setLayoutX(380);

                //Action of Clear Button

                b3.setOnAction(new EventHandler<ActionEvent>() {
                    @Override
                    public void handle(ActionEvent event) {
                        textArea.clear();

                    }

                });


          

                //Search button
                Button b4 = new Button("Search");
                b4.setLayoutX(150);
                b4.setLayoutY(200);

                //Action of the Search Button
                b4.setOnAction(new EventHandler<ActionEvent>() {
                    @Override
                    public void handle(ActionEvent event) {
                        String s = TextField3.getText();
                        if (s != null) {
                            System.out.println(s);
                        }
                        textArea.setText(s);
                        //String search = search(s);
                       // textArea.setText(search);
                        //store the string value of the product textfield.


                        //have a method to compare the value to the database.
                        //if the value is contained, print out all information regarding that product within the method.


                    }
                });

                //Create Stop Button

                Button b6 = new Button("Stop");

                b6.setLayoutY(500);

                b6.setLayoutX(450);

                //Action for the Stop Button

                b6.setOnAction(new EventHandler<ActionEvent>() {

                    @Override

                    public void handle(ActionEvent event) {

                        try {

                            primaryStage.close();

                        } catch (Exception e) {

                            // TODO Auto-generated catch block

                            e.printStackTrace();

                        }

                    }

                });
                subPane.getChildren().addAll(iv, label3, label4, label5, TextField3, textArea, TextField5, b1, b2, b3, b4, b6);

                Scene subScene = new Scene(subPane, 600, 600);

                subStage.setScene(subScene);

                subStage.show();
            }

        });
        //add to container
         textArea.setLayoutX(100);
        textArea.setLayoutY(320);
        pane.getChildren().addAll(iv, b5, b7, label1, label2, TextField1, TextField2);

        //create Scene

        Scene mainScene = new Scene(pane, 600, 200);

        //add to Stage

        primaryStage.setScene(mainScene);

        //Show Stage

        primaryStage.show();


    }
}



